"""add animal_statuses table and update animals.status to status_id

Revision ID: 75f4082d1def
Revises: 8e5a2a1d9c3b
Create Date: 2025-09-26 09:50:06.275841

"""
from typing import Sequence, Union
import json
from uuid import uuid4

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import JSON


# revision identifiers, used by Alembic.
revision: str = '75f4082d1def'
down_revision: Union[str, Sequence[str], None] = '8e5a2a1d9c3b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Create animal_statuses table
    op.create_table(
        'animal_statuses',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('tenant_id', sa.Uuid(), nullable=True),
        sa.Column('code', sa.String(length=50), nullable=False),
        sa.Column('translations', JSON, nullable=False),
        sa.Column('is_system_default', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_animal_statuses_tenant_id'), 'animal_statuses', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_animal_statuses_code'), 'animal_statuses', ['code'], unique=False)

    # Insert default animal statuses
    connection = op.get_bind()

    default_statuses = [
        {
            "code": "CALF",
            "translations": {
                "es": {"name": "Ternero/a", "description": "Ternero o ternera hasta el destete"},
                "en": {"name": "Calf", "description": "Male or female calf until weaning"}
            }
        },
        {
            "code": "HEIFER",
            "translations": {
                "es": {"name": "Novilla", "description": "Hembra post-destete, pre-parto"},
                "en": {"name": "Heifer", "description": "Young female, post-weaning, pre-calving"}
            }
        },
        {
            "code": "PREGNANT_HEIFER",
            "translations": {
                "es": {"name": "Novilla gestante", "description": "Novilla gestante, próxima a primer parto"},
                "en": {"name": "Pregnant heifer", "description": "Pregnant heifer, close to first calving"}
            }
        },
        {
            "code": "LACTATING",
            "translations": {
                "es": {"name": "En lactancia", "description": "Vaca en lactancia activa"},
                "en": {"name": "Lactating", "description": "Cow in active lactation"}
            }
        },
        {
            "code": "DRY",
            "translations": {
                "es": {"name": "Seca", "description": "Vaca seca - entre lactancias"},
                "en": {"name": "Dry", "description": "Dry cow - between lactations"}
            }
        },
        {
            "code": "PREGNANT_DRY",
            "translations": {
                "es": {"name": "Seca y gestante", "description": "Vaca seca y gestante"},
                "en": {"name": "Dry and pregnant", "description": "Dry and pregnant cow"}
            }
        },
        {
            "code": "BULL",
            "translations": {
                "es": {"name": "Toro", "description": "Toro - macho adulto para reproducción"},
                "en": {"name": "Bull", "description": "Bull - adult male for breeding"}
            }
        },
        {
            "code": "SOLD",
            "translations": {
                "es": {"name": "Vendido", "description": "Animal vendido"},
                "en": {"name": "Sold", "description": "Sold animal"}
            }
        },
        {
            "code": "DEAD",
            "translations": {
                "es": {"name": "Muerto", "description": "Animal muerto"},
                "en": {"name": "Dead", "description": "Dead animal"}
            }
        },
        {
            "code": "CULLED",
            "translations": {
                "es": {"name": "Descarte", "description": "Animal de descarte por decisión de manejo"},
                "en": {"name": "Culled", "description": "Culled animal due to management decision"}
            }
        }
    ]

    for status_data in default_statuses:
        connection.execute(
            sa.text("""
                INSERT INTO animal_statuses (id, tenant_id, code, translations, is_system_default, created_at)
                VALUES (:id, :tenant_id, :code, :translations, :is_system_default, NOW())
            """),
            {
                "id": str(uuid4()),
                "tenant_id": None,
                "code": status_data["code"],
                "translations": json.dumps(status_data["translations"]),
                "is_system_default": True
            }
        )

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('animals', sa.Column('status_id', sa.Uuid(), nullable=True))
    op.drop_column('animals', 'status')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('animals', sa.Column('status', sa.VARCHAR(length=6), autoincrement=False, nullable=False))
    op.drop_column('animals', 'status_id')

    # Drop animal_statuses table
    op.drop_index(op.f('ix_animal_statuses_code'), table_name='animal_statuses')
    op.drop_index(op.f('ix_animal_statuses_tenant_id'), table_name='animal_statuses')
    op.drop_table('animal_statuses')
    # ### end Alembic commands ###
