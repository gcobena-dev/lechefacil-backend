"""Add health_record table

Revision ID: 191b90d7ae01
Revises: 6249d4f36718
Create Date: 2025-10-17 09:55:36.610033

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '191b90d7ae01'
down_revision: Union[str, Sequence[str], None] = '6249d4f36718'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    

    op.create_unique_constraint('ux_animals_tenant_id', 'animals', ['tenant_id', 'id'])
    op.create_table('health_records',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('animal_id', sa.Uuid(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('occurred_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('veterinarian', sa.String(length=255), nullable=True),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('vaccine_name', sa.String(length=255), nullable=True),
    sa.Column('next_dose_date', sa.Date(), nullable=True),
    sa.Column('medication', sa.String(length=255), nullable=True),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.Column('withdrawal_days', sa.Integer(), nullable=True),
    sa.Column('withdrawal_until', sa.Date(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id', 'animal_id'], ['animals.tenant_id', 'animals.id'], name='fk_health_records_animal'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_health_records_event_type', 'health_records', ['tenant_id', 'event_type', 'occurred_at'], unique=False, postgresql_where='deleted_at IS NULL')
    op.create_index('idx_health_records_next_doses', 'health_records', ['tenant_id', 'next_dose_date'], unique=False, postgresql_where="next_dose_date IS NOT NULL AND event_type = 'VACCINATION' AND deleted_at IS NULL")
    op.create_index('idx_health_records_tenant_animal', 'health_records', ['tenant_id', 'animal_id', 'occurred_at'], unique=False, postgresql_where='deleted_at IS NULL')
    op.create_index('idx_health_records_withdrawals', 'health_records', ['tenant_id', 'withdrawal_until'], unique=False, postgresql_where='withdrawal_until IS NOT NULL AND deleted_at IS NULL')
    op.create_index(op.f('ix_health_records_tenant_id'), 'health_records', ['tenant_id'], unique=False)
    op.add_column('animals', sa.Column('in_milk_withdrawal', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('animals', sa.Column('withdrawal_until', sa.Date(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('animals', 'withdrawal_until')
    op.drop_column('animals', 'in_milk_withdrawal')
    op.drop_index(op.f('ix_health_records_tenant_id'), table_name='health_records')
    op.drop_index('idx_health_records_withdrawals', table_name='health_records', postgresql_where='withdrawal_until IS NOT NULL AND deleted_at IS NULL')
    op.drop_index('idx_health_records_tenant_animal', table_name='health_records', postgresql_where='deleted_at IS NULL')
    op.drop_index('idx_health_records_next_doses', table_name='health_records', postgresql_where="next_dose_date IS NOT NULL AND event_type = 'VACCINATION' AND deleted_at IS NULL")
    op.drop_index('idx_health_records_event_type', table_name='health_records', postgresql_where='deleted_at IS NULL')
    op.drop_table('health_records')
    op.drop_constraint('ux_animals_tenant_id', 'animals', type_='unique')
    # ### end Alembic commands ###
